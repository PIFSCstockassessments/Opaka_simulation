---
title: "Simulation Outputs"
format: 
    dashboard:
        orientation: rows
        theme: flatly
---


```{r}
# setup 
library(r4ss)
library(tidyverse)
library(ss3sim)
main.dir <- this.path::here(.. = 1)
source(file.path(main.dir, "R", "calculate_re_MO.r"))
```

```{r}
#| echo: false
# read in results from simulation runs

files <- list.files(main.dir, pattern = ".csv")
results.list <-  lapply(files, read.csv)

#get index of list objects for each type of csv
scalar.ind <- grep(pattern = "scalar.csv", x = files)
dq.ind <- grep(pattern = "dq.csv", x = files)
ts.ind <- grep(pattern = "ts.csv", x = files)
agecomp.ind <- grep(pattern = "agecomp.csv", x = files)
lencomp.ind <- grep(pattern = "lencomp.csv", x = files)
index.ind <- grep(pattern = "index.csv", x = files)

#create subset dfs by type
scalar_df <- data.frame(results.list[scalar.ind])
dq_df <- data.frame(results.list[dq.ind])
ts_df <- data.frame(results.list[ts.ind])
agecomp_df <- data.frame(results.list[agecomp.ind])
lencomp_df <- data.frame(results.list[lencomp.ind])
index_df <- data.frame(results.list[index.ind])

#find models that didn't converge for filtering later
nonconverged_its <- scalar_df %>% 
    filter(max_grad > 1e-4) %>% 
    select(c(model_run, iteration,scenario)) %>% 
    mutate(nonconverged_run = paste(scenario, iteration, sep = "_"))
```

### 
```{r}

#filter out non-converged runs
results_ts <- ts_df %>% 
    mutate(run_ID = paste(scenario, iteration, sep = "_")) %>% 
    filter(! run_ID %in% nonconverged_its$nonconverged_run) %>% 
    select(SpawnBio, Recruit_0, F_1, SPRratio, rec_dev, raw_rec_dev, year, model_run, iteration, scenario)

#calculate relative error of SSB
ts_re <- calculate_re(results_ts)

ts_re %>%
group_by(scenario, year) %>% 
summarise(med_re = quantile(SpawnBio_re, .5),
uci = quantile(SpawnBio_re, .95),
lci = quantile(SpawnBio_re, .05)) %>% 
ggplot() +
geom_hline(yintercept = 0, color = "grey60") +
geom_ribbon(aes(x = year, ymin = lci, ymax = uci, fill = scenario), alpha = .5) + 
geom_line(aes(x = year, y = med_re, color = scenario), linewidth = 1.2) +
labs(x = "Year", y = "SSB MRE") + 
theme_bw()

```


```{r}
##TODO: left off here 9/24
fits_inds$residuals <- (log(fits_inds$Obs) - log(fits_inds$Exp))

fits_inds %>%
filter(model_run != "om") %>%
ggplot(aes(x = year, y = residuals)) + 
geom_hline(yintercept = 0, linetype = 2, color = "grey50") +
geom_segment(aes(x = year, y = 0, yend = residuals)) +
geom_point(aes(color = factor(iteration))) + 
geom_smooth() +
facet_wrap(~Fleet_name, scales = "free_x") + 
ylim(-.5, .5) +
theme_classic()
```

###
```{r}
## plots for relative error of management specific values 

results_scalar <- results_scalar %>% filter(model_run %in% converged_its$model_run & iteration %in% converged_its$iteration | str_detect(model_run, "om"))
re_scal_list <- lapply(om_ems,function(x){
    calculate_re_MO(results_scalar, EM = x[2], OM = x[1])
})

## quantities to keep track of 
### depletion_re, F_MSY_re, SR_LN_R0_re, SSB_MSY_re, Totbio_Unfished_re

re_scal_df <- re_scal_list %>%
map2(ems, ~cbind(.x, model_run = .y)) %>% 
bind_rows() 

re_scal_df %>% select(c(iteration, model_run, depletion_re, F_MSY_re, SR_LN_R0_re, SSB_MSY_re)) %>%
filter(model_run == "em_2") %>%
pivot_longer(cols = c(depletion_re, F_MSY_re, SR_LN_R0_re, SSB_MSY_re)) %>% 
ggplot() +
geom_boxplot(aes(x = name, y = value)) + 
geom_hline(yintercept = 0, color = "grey50", linetype = 2) +
#facet_wrap(~model_run) + 
labs(x = "Management Quants", y = "RE") + 
theme_classic()


```

### 

```{r}
like_dir <- file.path(main.dir, "opaka-sim", "1", "em_5", "likelihood_prof")
piner_plot <- list.files(like_dir, pattern = "profile_plot_likelihood", full.names = T)
library(png)

img <- readPNG(piner_plot[1])
grid::grid.raster(img)
# knitr::include_graphics(path = normalizePath("../opaka-sim/1/em_5/likelihood_prof/profile_plot_likelihood.png"))
#knitr::include_graphics(piner_plot[1])
 

```

